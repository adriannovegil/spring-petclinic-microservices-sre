version: '3.8'

services:

  # Infrastructure
  # ============================================================================
  # Config server
  config-server:
    image: springcommunity/spring-petclinic-config-server
    ports:
      - 8888:8888
    networks:
      - observabilitysandbox
    restart: always
    labels:
      org.label-schema.group: "observability"

  # Discovery service
  discovery-server:
    image: springcommunity/spring-petclinic-discovery-server
    depends_on:
      - config-server
    entrypoint: ["./dockerize","-wait=tcp://config-server:8888","-timeout=300s","--","java", "org.springframework.boot.loader.JarLauncher"]
    ports:
      - 8761:8761
    networks:
      - observabilitysandbox
    restart: always
    labels:
      org.label-schema.group: "observability"

  # Services
  # ============================================================================
  # Customers service
  customers-service:
    image: springcommunity/spring-petclinic-customers-service
    environment:
      #- SPRING_PROFILES_ACTIVE=docker,chaos-monkey,elk
      - SPRING_PROFILES_ACTIVE=local,docker,chaos-monkey
      - LOGSTASH_HOST=logstash
      - LOGSTASH_PORT=5044
    depends_on:
      - config-server
      - discovery-server
    entrypoint: ["./dockerize","-wait=tcp://discovery-server:8761","-timeout=300s","--","java", "org.springframework.boot.loader.JarLauncher"]
    ports:
      - 8081:8081
    networks:
      - observabilitysandbox
    restart: always
    labels:
      org.label-schema.group: "observability"

  # Visits service
  visits-service:
    image: springcommunity/spring-petclinic-visits-service
    environment:
      - SPRING_PROFILES_ACTIVE=local,docker,chaos-monkey,elk
      #- SPRING_PROFILES_ACTIVE=docker,chaos-monkey
      - LOGSTASH_HOST=logstash
      - LOGSTASH_PORT=5044
    depends_on:
      - config-server
      - discovery-server
    entrypoint: ["./dockerize","-wait=tcp://discovery-server:8761","-timeout=300s","--","java", "org.springframework.boot.loader.JarLauncher"]
    ports:
      - 8082:8082
    networks:
      - observabilitysandbox
    restart: always
    labels:
      org.label-schema.group: "observability"

  #Vets service
  vets-service:
    image: springcommunity/spring-petclinic-vets-service
    environment:
      - SPRING_PROFILES_ACTIVE=local,docker,chaos-monkey,elk
      #- SPRING_PROFILES_ACTIVE=docker,chaos-monkey
      - LOGSTASH_HOST=logstash
      - LOGSTASH_PORT=5044
    depends_on:
      - config-server
      - discovery-server
    entrypoint: ["./dockerize","-wait=tcp://discovery-server:8761","-timeout=300s","--","java", "org.springframework.boot.loader.JarLauncher"]
    #ports:
    #  - 8083:8083
    networks:
      - observabilitysandbox
    restart: always
    labels:
      org.label-schema.group: "observability"

  # API gateway
  api-gateway:
    image: springcommunity/spring-petclinic-api-gateway
    environment:
      - SPRING_PROFILES_ACTIVE=local,docker,elk
      - LOGSTASH_HOST=logstash
      - LOGSTASH_PORT=5044
    depends_on:
      - config-server
      - discovery-server
    entrypoint: ["./dockerize","-wait=tcp://discovery-server:8761","-timeout=300s","--","java", "org.springframework.boot.loader.JarLauncher"]
    ports:
     - 8080:8080
    networks:
      - observabilitysandbox
    restart: always
    labels:
      org.label-schema.group: "observability"

  # Admin Server
  # ============================================================================
  admin-server:
    image: springcommunity/spring-petclinic-admin-server
    depends_on:
      - config-server
      - discovery-server
    entrypoint: ["./dockerize","-wait=tcp://discovery-server:8761","-timeout=300s","--","java", "org.springframework.boot.loader.JarLauncher"]
    ports:
      - 9091:9090
    networks:
      - observabilitysandbox
    restart: always
    labels:
     org.label-schema.group: "observability"

  # Load
  # ============================================================================
  # Load server
  load-server:
    build: ./docker/load-server
    image: springcommunity/load-server
    depends_on:
      - api-gateway
      - customers-service
      - visits-service
      - vets-service
    networks:
      - observabilitysandbox
    restart: always
    labels:
      org.label-schema.group: "observability"

  # Container management
  # ============================================================================
  # Portainer Docker management service
  portainer:
    image: portainer/portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./portainer-data:/data
    ports:
      - 9000:9000
    networks:
      - observabilitysandbox
    labels:
      org.label-schema.group: "observability"

networks:
  observabilitysandbox:
    name: observabilitysandbox
    external: true
